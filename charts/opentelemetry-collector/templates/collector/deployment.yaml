{{- $root := . -}}
{{- $object := "deployment" -}}
{{- $globalMetadata := .Values.global.metadata -}}
{{- $globalSharedLabels := $globalMetadata.shared.labels -}}
{{- $globalObjectLabels := $globalMetadata.deployment.labels }}
{{- $globalSharedAnnotations := $globalMetadata.shared.annotations }}
{{- $globalObjectAnnotations := $globalMetadata.deployment.annotations }}
{{- $localMetadata := .Values.collector.metadata -}}
{{- $localSharedAnnotations := $localMetadata.shared.annotations -}}
{{- $localObjectAnnotations := $localMetadata.deployment.annotations -}}
{{- $localSharedLabels := $localMetadata.shared.labels -}}
{{- $localObjectLabels := $localMetadata.deployment.labels -}}
{{- $globalSubLabels := $globalMetadata.pod.labels }}
{{- $globalSubAnnotations := $globalMetadata.pod.annotations }}
{{- $localSubAnnotations := $localMetadata.pod.annotations -}}
{{- $localSubLabels := $localMetadata.pod.labels -}}
{{- $resources := .Values.collector.specs.resources -}}
{{- if .Values.global.ignoreCpuLimits }}{{ $_ := unset $resources.limits "cpu" }}{{- end }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ $root.Values.global.name }}-{{ $localMetadata.name }}-deployment
  labels: {{ tpl ( toYaml $globalSharedLabels | nindent 4) $ }}
  {{- if $globalObjectLabels }}{{ tpl ( toYaml $globalObjectLabels | nindent 4) . }}{{- end }}
  {{- if $localSharedLabels }}{{ toYaml $localSharedLabels | nindent 4 }}{{- end }}
  {{- if $localObjectLabels }}{{ toYaml $localObjectLabels | nindent 4 }}{{- end }}
  annotations: {{- if $globalSharedAnnotations }}{{ tpl ( toYaml $globalSharedAnnotations | nindent 4) $ }}{{- end}}
  {{- if $globalObjectAnnotations }}{{ tpl ( toYaml $globalObjectAnnotations | nindent 4) . }}{{- end }}
  {{- if $localSharedAnnotations }}{{ toYaml $localSharedAnnotations | nindent 4 }}{{- end }}
  {{- if $localObjectAnnotations }}{{ toYaml $localObjectAnnotations | nindent 4 }}{{- end }}
spec:
  selector:
    matchLabels:
{{- toYaml .Values.collector.metadata.pod.labels | nindent 6 }}
{{- if not .Values.collector.specs.autoscaling.enable }}
  replicas: {{ .Values.collector.specs.autoscaling.defaultReplicaCount }}
{{- end }}
  {{- if .Values.global.rolloutStrategy }}
  strategy: {{ toYaml .Values.global.rolloutStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels: {{ tpl ( toYaml $globalSharedLabels | nindent 8) $ }}
    {{- if $globalSubLabels }}{{ tpl ( toYaml $globalSubLabels | nindent 8) . }}{{- end }}
    {{- if $localSharedLabels }}{{ toYaml $localSharedLabels | nindent 8 }}{{- end }}
    {{- if $localSubLabels }}{{ toYaml $localSubLabels | nindent 8 }}{{- end }}
      annotations: {{ tpl ( toYaml $globalSharedAnnotations | nindent 8 ) $ }}
    {{- if $globalSubAnnotations }}{{ tpl ( toYaml $globalSubAnnotations | nindent 8) . }}{{- end }}
    {{- if $localSharedAnnotations }}{{ toYaml $localSharedAnnotations | nindent 8 }}{{- end }}
    {{- if $localSubAnnotations }}{{ toYaml $localSubAnnotations | nindent 8 }}{{- end }}
    spec:
      volumes:
        - name: {{ .Values.global.name }}-{{ $localMetadata.name }}-{{ .Values.collector.specs.volumes.serviceConfig.name }}
          configMap:
            name: {{ .Values.global.name }}-{{ $localMetadata.name }}-{{ .Values.collector.specs.volumes.serviceConfig.name }}
      {{- if .Values.collector.serviceAccount.enabled }}
      {{ toYaml .Values.collector.serviceAccount.containerConfig | nindent 6}}
      {{- end }}
      {{- if .Values.collector.metadata.deployment.customConfig }}
      {{ toYaml .Values.collector.metadata.deployment.customConfig | nindent 6 }}
      {{- end }}
      containers:
        - name: "{{ .Values.global.name }}-{{ .Values.collector.metadata.name }}"
          image: "{{ .Values.collector.image.repository | default .Values.global.image.repository }}/{{ .Values.collector.image.name | default .Values.global.image.name }}:{{ .Values.collector.image.version | default .Values.global.image.version }}"
          imagePullPolicy: {{ .Values.collector.image.policy | default .Values.global.image.pullPolicy }}
          command: ["/otelcol-sampling","--config","{{ .Values.collector.specs.volumes.serviceConfig.mountPath }}/{{ .Values.collector.specs.volumes.serviceConfig.fileName }}"]
          volumeMounts:
            - name: {{ .Values.global.name }}-{{ $localMetadata.name }}-{{ .Values.collector.specs.volumes.serviceConfig.name }}
              mountPath: {{ .Values.collector.specs.volumes.serviceConfig.mountPath | quote}}
          {{- range .Values.collector.specs.volumes.extraVolumes }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
          {{- end }}
          {{- range .Values.collector.specs.volumes.extraSecretMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              readOnly: {{ .readOnly }}
          {{- end }}
          env:
  {{- if or ( $root.Values.global.aspecto.token.secret.createNewSecret) ($root.Values.global.aspecto.token.secret.existingSecretName) }}
            - name: token
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.aspecto.token.secret.existingSecretName | default (printf "%s-token" .Values.global.name) }}
                  key: {{ .Values.global.aspecto.token.secret.keyName }}
  {{ else }}
            - name: token
              value: {{ .Values.global.aspecto.token.value }}
  {{- end }}
          {{- if .Values.collector.specs.configuration.kafka.enable }}
            {{- if .Values.collector.specs.configuration.kafka.auth.secret.name }}
            - name: KAFKA_USERNAME
              valueFrom:
                secretKeyRef:
                  key: {{ .Values.collector.specs.configuration.kafka.auth.secret.username_key }}
                  name: {{ .Values.collector.specs.configuration.kafka.auth.secret.name }}
            - name: KAFKA_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: {{ .Values.collector.specs.configuration.kafka.auth.secret.password_key }}
                  name: {{ .Values.collector.specs.configuration.kafka.auth.secret.name }}
            {{- else }}
            - name: KAFKA_USERNAME
              value: {{ .Values.collector.specs.configuration.kafka.auth.username }}
            - name: KAFKA_PASSWORD
              value: {{ .Values.collector.specs.configuration.kafka.auth.password }}
            {{- end }}
          {{- end }}
          {{- if .Values.redis.enabled }}
            {{- if .Values.redis.config.credentials.secret.name }}
            - name: REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  key: {{ .Values.redis.config.credentials.secret.username_key }}
                  name:  {{ .Values.redis.config.credentials.secret.name }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: {{ .Values.redis.config.credentials.secret.password_key }}
                  name: {{ .Values.redis.config.credentials.secret.name }}
            {{- else }}
            - name: REDIS_USERNAME
              value: {{ .Values.redis.config.credentials.username | quote }}
            - name: REDIS_PASSWORD
              value: {{ .Values.redis.config.credentials.password | quote }}
            - name: ASPECTO_CHART_VERSION
              value: {{ .Chart.Version }}
            {{- end }}
  {{- end }}{{- if .Values.collector.envs }}{{ toYaml .Values.collector.envs | indent 12 }}{{- end}}
          {{- if .Values.collector.envFrom }}
          envFrom:
{{ toYaml .Values.collector.envFrom | indent 10 }}
          {{- end }}
          ports:
          {{- range .Values.global.collector_services }}
            - containerPort: {{ .internalPort }}
              name: {{ .name | replace "_" "-" }}
              protocol: {{ .protocol }}
          {{- end }}
          {{- if .Values.collector.specs.probe }}
{{ toYaml .Values.collector.specs.probe | trim | indent 10}}
          {{- end }}
          resources:
{{ toYaml $resources | trim | indent 12 }}
