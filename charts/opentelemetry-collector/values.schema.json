{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Global prefix for objects (deployment/service/etc.)",
                    "default": ""
                },
                "namespace": {
                    "type": "string",
                    "description": "default namespace for objects (deployment/service/etc.)",
                    "default": ""
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "prefix for child objects",
                            "default": "receiver"
                        },
                        "shared": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "pod annotations",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "pod labels",
                                    "default": {}
                                }
                            }
                        },
                        "pod": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "pod annotations",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "pod labels",
                                    "default": {}
                                }
                            }
                        },
                        "hpa": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "pod annotations",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "pod labels",
                                    "default": {}
                                }
                            }
                        },
                        "deployment": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "pod annotations",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "pod labels",
                                    "default": {}
                                }
                            }
                        },
                        "service": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "pod annotations",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "pod labels",
                                    "default": {}
                                }
                            }
                        },
                        "virtualService": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "pod annotations",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "pod labels",
                                    "default": {}
                                }
                            }
                        },
                        "destinationRule": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "pod annotations",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "pod labels",
                                    "default": {}
                                }
                            }
                        },
                        "configMap": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "pod annotations",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "pod labels",
                                    "default": {}
                                }
                            }
                        }
                    }
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "repository": {
                            "type": "string",
                            "description": "Global repository to pull the image from",
                            "default": ""
                        },
                        "pullPolicy": {
                            "enum": ["Always", "Never", "IfNotPresent"],
                            "description": "Global image pull policy (Always|Never|IfNotPresent)",
                            "examples": ["Always", "Never", "IfNotPresent"]
                        },
                        "version": {
                            "type": "string",
                            "description": "Global image to pull (we're using the same tag when new version is release and tested",
                            "default": ""
                        }
                    }
                },
                "env": {
                    "type": "object",
                    "description": "Global environment variables",
                    "default": {}
                },
                "aspecto": {
                    "type": "object",
                    "properties": {
                        "apiToken": {
                            "type": "string",
                            "description": "api token for aspecto integration. for more information go here: https://app.aspecto.io/app/integration/api-key",
                            "default": null
                        },
                        "interval": {
                            "type": "number",
                            "description": "refresh rate to validate token (in seconds)",
                            "default": 10
                        },
                        "existingSecret": {
                            "type": "boolean",
                            "description": "Should we use the API token already existing in the kube secrets ",
                            "default": false
                        }
                    }
                },
                "rolloutStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "enum": ["Recreate", "RollingUpdate"],
                            "description": "rolling deployment strategy",
                            "examples": ["Recreate", "RollingUpdate"],
                            "default": "RollingUpdate"
                        },
                        "rollingUpdate": {
                            "type": "object",
                            "properties": {
                                "maxUnavailable": {
                                    "type": "number",
                                    "description": "How many instances are allowed to be unavailable during the deployment",
                                    "default": 0
                                },
                                "maxSurge": {
                                    "type": "number",
                                    "description": "How many instances should be spawned up before taking down existing instances",
                                    "default": 2
                                }
                            }
                        }
                    }
                }
            }
        },
        "receiver": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "object",
                    "properties": {
                        "repository": {
                            "type": "string",
                            "description": "repository to pull the image from",
                            "default": ""
                        },
                        "pullPolicy": {
                            "enum": ["Always", "Never", "IfNotPresent"],
                            "description": "image pull policy (Always|Never|IfNotPresent)",
                            "examples": ["Always", "Never", "IfNotPresent"],
                            "default": "IfNotPresent"
                        },
                        "name": {
                            "type": "string",
                            "description": "image name to pull (we're using the same tag when new version is release and tested",
                            "default": ""
                        },
                        "version": {
                            "type": "string",
                            "description": "image to pull (we're using the same tag when new version is release and tested",
                            "default": ""
                        }
                    }
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "prefix for child objects",
                            "default": "receiver"
                        },
                        "shared": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "pod annotations",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "pod labels",
                                    "default": {}
                                }
                            }
                        },
                        "pod": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "pod annotations",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "pod labels",
                                    "default": {}
                                }
                            }
                        },
                        "hpa": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "pod annotations",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "pod labels",
                                    "default": {}
                                }
                            }
                        },
                        "deployment": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "pod annotations",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "pod labels",
                                    "default": {}
                                }
                            }
                        },
                        "service": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "pod annotations",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "pod labels",
                                    "default": {}
                                }
                            }
                        },
                        "virtualService": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "pod annotations",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "pod labels",
                                    "default": {}
                                }
                            }
                        },
                        "destinationRule": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "pod annotations",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "pod labels",
                                    "default": {}
                                }
                            }
                        },
                        "configMap": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "pod annotations",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "pod labels",
                                    "default": {}
                                }
                            }
                        }
                    }
                },
                "env": {
                    "type": "object",
                    "description": "environment variables",
                    "default": {}
                },
                "specs": {
                    "type": "object",
                    "properties": {
                        "configuration": {
                            "type": "object",
                            "properties": {
                                "exporters": {
                                    "type": "object",
                                    "properties": {
                                        "otlp": {
                                            "type": "object",
                                            "properties": {
                                                "timeout": {
                                                    "type": "string",
                                                    "description": "timeout of connection in case of no response",
                                                    "default": "1s"
                                                },
                                                "tls": {
                                                    "type": "object",
                                                    "properties": {
                                                        "insecure": {
                                                            "type": "boolean",
                                                            "description": "connection over TLS should verify certificate",
                                                            "default": false
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "resolver": {
                                            "type": "object",
                                            "properties": {
                                                "dns": {
                                                    "type": "object",
                                                    "properties": {
                                                        "hostname": {
                                                            "type": "string",
                                                            "default": "",
                                                            "description": "sampling service endpoint"
                                                        },
                                                        "port": {
                                                            "type": "number",
                                                            "default": 4317,
                                                            "description": "sampling service grpc port number"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "log": {
                                    "type": "object",
                                    "properties": {
                                        "enable": {
                                            "type": "boolean",
                                            "default": false,
                                            "description": "should output events logs"
                                        },
                                        "level": {
                                            "enum": ["fatal", "error", "info", "debug"],
                                            "default": "info",
                                            "description": "log level",
                                            "examples": ["fatal", "error", "info", "debug"]
                                        }
                                    }
                                },
                                "endpoint": {
                                    "type": "string",
                                    "default": ""
                                }
                            }
                        },
                        "autoscaling": {
                            "type": "object",
                            "properties": {
                                "enable": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "should we enable hpa on the service"
                                },
                                "defaultReplicaCount": {
                                    "type": "number",
                                    "default": 3,
                                    "description": "number of initial pods"
                                },
                                "minReplicas": {
                                    "type": "number",
                                    "default": 3,
                                    "description": "minimum number of pods"
                                },
                                "maxReplicas": {
                                    "type": "number",
                                    "default": 20,
                                    "description": "maximum number of pods"
                                },
                                "targetCPUUtilizationPercentage": {
                                    "type": "number",
                                    "default": 75,
                                    "description": "CPU percentage threshold before creating more pods"
                                },
                                "targetMemoryUtilizationPercentage": {
                                    "type": "number",
                                    "default": 75,
                                    "description": "Memory percentage threshold before creating more pods"
                                }
                            }
                        },
                        "resources": {
                            "type": "object",
                            "properties": {
                                "limits": {
                                    "type": "object",
                                    "properties": {
                                        "cpu": {
                                            "type": "number",
                                            "default": 2,
                                            "description": "Max number of cores to allocate"
                                        },
                                        "memory": {
                                            "type": "string",
                                            "default": "2Gi",
                                            "description": "Max memory to allocate"
                                        }
                                    }
                                },
                                "requests": {
                                    "type": "object",
                                    "properties": {
                                        "cpu": {
                                            "type": "number",
                                            "default": 2,
                                            "description": "Number of cores to allocate"
                                        },
                                        "memory": {
                                            "type": "string",
                                            "default": "2Gi",
                                            "description": "Memory to allocate"
                                        }
                                    }
                                }
                            }
                        },
                        "probe": {
                            "type": "object",
                            "properties": {
                                "readinessProbe": {
                                    "type": "object",
                                    "properties": {
                                        "httpGet": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": "string",
                                                    "default": "/",
                                                    "description": "endpoint to query"
                                                },
                                                "port": {
                                                    "type": "number",
                                                    "default": 8090,
                                                    "description": "port to run http requests against"
                                                }
                                            }
                                        },
                                        "initialDelaySeconds":{
                                            "type": "number",
                                            "description": "how many seconds to wait before first request to probe the state",
                                            "default": 3
                                        },
                                        "periodSeconds":{
                                            "type": "number",
                                            "description": "ttl of request to probe the state",
                                            "default": 3
                                        }
                                    },
                                    "livenessProbe": {
                                        "type": "object",
                                        "properties": {
                                            "httpGet": {
                                                "type": "object",
                                                "properties": {
                                                    "path": {
                                                        "type": "string",
                                                        "default": "/",
                                                        "description": "endpoint to query"
                                                    },
                                                    "port": {
                                                        "type": "number",
                                                        "default": 8090,
                                                        "description": "port to run http requests against"
                                                    }
                                                }
                                            },
                                            "initialDelaySeconds":{
                                                "type": "number",
                                                "description": "how many seconds to wait before first request to probe the state",
                                                "default": 3
                                            },
                                            "periodSeconds":{
                                                "type": "number",
                                                "description": "ttl of request to probe the state",
                                                "default": 3
                                            }
                                        }
                                    }
                                }
                            },
                            "volumes": {
                                "type": "object",
                                "properties": {
                                    "serviceConfig": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "default": "",
                                                "description": "volume name to mount"
                                            },
                                            "mountPath": {
                                                "type": "string",
                                                "default": "/config",
                                                "description": "mount folder location (name)"
                                            },
                                            "fileName": {
                                                "type": "string",
                                                "default": "config.yaml",
                                                "description": "configuration file name"
                                            }
                                        }
                                    },
                                    "extraVolumes": {
                                        "type": "array",
                                        "default": [],
                                        "description": "extra volumes that the end user can mount",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "configmap/volume name"
                                            },
                                            "mountPath": {
                                                "type": "string",
                                                "description": "folder name/path"
                                            },
                                            "subPath": {
                                                "type": "string",
                                                "description": "filename"
                                            }
                                        }
                                    },
                                    "extraSecretMounts": {
                                        "type": "array",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "volume name"
                                            },
                                            "mountPath": {
                                                "type": "string",
                                                "description": "folder name/path"
                                            },
                                            "secretName": {
                                                "type": "string",
                                                "description": "secret name"
                                            },
                                            "readOnly": {
                                                "type": "boolean",
                                                "default": true,
                                                "description": "can the pod change the secret"
                                            }
                                        }
                                    }
                                }
                            },
                            "network": {
                                "type": "object",
                                "properties": {
                                    "localListenerIp": {
                                        "type": "string",
                                        "default": "0.0.0.0",
                                        "description": "ip address the application should accept requests from"
                                    },
                                    "type": {
                                        "type": "string",
                                        "default": "None",
                                        "description": "Network type"
                                    },
                                    "ports": {
                                        "type": "array",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "port name"
                                            },
                                            "internalPort": {
                                                "type": "number",
                                                "description": "port that the container should listen on"
                                            },
                                            "externalPort": {
                                                "type": "number",
                                                "description": "port that the container should expose"
                                            },
                                            "protocol": {
                                                "enum": ["TCP", "UDP","ICMP"],
                                                "default": "TCP",
                                                "description": "port protocol, that the application is using to get traffic",
                                                "examples": ["TCP", "UDP", "ICMP"]
                                            }
                                        }
                                    },
                                    "istio": {
                                        "type": "object",
                                        "properties": {
                                            "enable": {
                                                "type": "boolean",
                                                "default": false,
                                                "description": "should the deployment network be handled using istio"
                                            },
                                            "rules": {
                                                "type": "array",
                                                "properties": {
                                                    "ingress": {
                                                        "type": "array",
                                                        "properties": {
                                                            "uriPrefix": {
                                                                "type": "string",
                                                                "description": "request address"
                                                            },
                                                            "host": {
                                                                "type": "string",
                                                                "description": "to which address we should listen and identify the traffic"
                                                            },
                                                            "destinationPort": {
                                                                "type": "number",
                                                                "description": "to which port should the traffic be transferred to"
                                                            }
                                                        }
                                                    },
                                                    "hostHeader": {
                                                        "type": "array",
                                                        "default": []
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "services": {
                                    "type": "array", 
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "service name"
                                        },
                                        "serviceType": {
                                            "enum": ["LoadBalancer", "ClusterIP"],
                                            "description": "Service type",
                                            "examples": ["LoadBalancer", "ClusterIP"]
                                        },
                                        "selector": {
                                            "type": "object",
                                            "description": "which pods will be used for this service (by label)"
                                        },
                                        "ports": {
                                            "type": "array",
                                            "description": "service ports",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "port name"
                                                },
                                                "type": {
                                                    "enum": ["http", "grpc", "tcp"],
                                                    "description": "port type",
                                                    "examples": ["http", "grpc", "tcp"]
                                                },
                                                "internalPort": {
                                                    "type": "number",
                                                    "description": "port that the container should listen on"
                                                },
                                                "externalPort": {
                                                    "type": "number",
                                                    "description": "port that the container should expose"
                                                },
                                                "protocol": {
                                                    "enum": ["TCP", "UDP", "ICMP"],
                                                    "default": "TCP",
                                                    "description": "port protocol, that the application is using to get traffic",
                                                    "examples": ["TCP", "UDP", "ICMP"]
                                                },
                                                "loadBalancer": {
                                                    "type": "object",
                                                    "description": "LB configuration",
                                                    "properties": {
                                                        "simple": {
                                                            "type": "string",
                                                            "default": "LEAST_CONN",
                                                            "description": "routing mechanism"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "collector": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "object",
                    "properties": {
                        "repository": {
                            "type": "string",
                            "description": "repository to pull the image from",
                            "default": ""
                        },
                        "pullPolicy": {
                            "enum": ["Always", "Never", "IfNotPresent"],
                            "description": "image pull policy (Always|Never|IfNotPresent)",
                            "examples": ["Always", "Never", "IfNotPresent"],
                            "default": "IfNotPresent"
                        },
                        "name": {
                            "type": "string",
                            "description": "image name to pull (we're using the same tag when new version is release and tested",
                            "default": ""
                        },
                        "version": {
                            "type": "string",
                            "description": "image to pull (we're using the same tag when new version is release and tested",
                            "default": ""
                        }
                    }
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "prefix for child objects",
                            "default": "receiver"
                        },
                        "shared": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "pod annotations",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "pod labels",
                                    "default": {}
                                }
                            }
                        },
                        "pod": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "pod annotations",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "pod labels",
                                    "default": {}
                                }
                            }
                        },
                        "hpa": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "pod annotations",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "pod labels",
                                    "default": {}
                                }
                            }
                        },
                        "deployment": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "pod annotations",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "pod labels",
                                    "default": {}
                                }
                            }
                        },
                        "service": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "pod annotations",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "pod labels",
                                    "default": {}
                                }
                            }
                        },
                        "virtualService": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "pod annotations",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "pod labels",
                                    "default": {}
                                }
                            }
                        },
                        "destinationRule": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "pod annotations",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "pod labels",
                                    "default": {}
                                }
                            }
                        },
                        "configMap": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "pod annotations",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "pod labels",
                                    "default": {}
                                }
                            }
                        },
                        "serviceMonitor": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "serviceMonitor annotations to allow monitoring using Prometheus",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "serviceMonitor labels",
                                    "default": {}
                                }
                            }
                        },
                        "podMonitor": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "description": "podMonitor annotations to allow monitoring using Prometheus",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "podMonitor labels",
                                    "default": {}
                                }
                            }
                        }
                    }
                },
                "env": {
                    "type": "object",
                    "description": "environment variables",
                    "default": {}
                },
                "specs": {
                    "type": "object",
                    "properties": {
                        "configuration": {
                            "type": "object",
                            "properties": {
                                "log": {
                                    "type": "object",
                                    "properties": {
                                        "enable": {
                                            "type": "boolean",
                                            "default": false,
                                            "description": "should output events logs"
                                        },
                                        "level": {
                                            "enum": ["fatal", "error", "info", "debug"],
                                            "default": "info",
                                            "description": "log level",
                                            "examples": ["fatal", "error", "info", "debug"]
                                        }
                                    }
                                },
                                "endpoint": {
                                    "type": "string",
                                    "default": ""
                                },
                                "decision_wait": {
                                    "type": "string",
                                    "description": "number of seconds to wait before closing the trace",
                                    "default": "10s"
                                },
                                "num_traces": {
                                    "type": "number",
                                    "description": "number of traces to hold in the memory",
                                    "default": 100
                                },
                                "expected_new_traces_per_sec": {
                                    "type": "number",
                                    "default": 10,
                                    "description": "number of expected traces per seconds"
                                },
                                "policies": {
                                    "type": "string",
                                    "default": "$$aspecto:tail_sampling_policy",
                                    "description": "policy name (aspecto mapping)"
                                }
                            }
                        },
                        "autoscaling": {
                            "type": "object",
                            "properties": {
                                "enable": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "should we enable hpa on the service"
                                },
                                "defaultReplicaCount": {
                                    "type": "number",
                                    "default": 3,
                                    "description": "number of initial pods"
                                },
                                "minReplicas": {
                                    "type": "number",
                                    "default": 3,
                                    "description": "minimum number of pods"
                                },
                                "maxReplicas": {
                                    "type": "number",
                                    "default": 20,
                                    "description": "maximum number of pods"
                                },
                                "targetCPUUtilizationPercentage": {
                                    "type": "number",
                                    "default": 75,
                                    "description": "CPU percentage threshold before creating more pods"
                                },
                                "targetMemoryUtilizationPercentage": {
                                    "type": "number",
                                    "default": 75,
                                    "description": "Memory percentage threshold before creating more pods"
                                }
                            }
                        },
                        "resources": {
                            "type": "object",
                            "properties": {
                                "limits": {
                                    "type": "object",
                                    "properties": {
                                        "cpu": {
                                            "type": "number",
                                            "default": 2,
                                            "description": "Max number of cores to allocate"
                                        },
                                        "memory": {
                                            "type": "string",
                                            "default": "2Gi",
                                            "description": "Max memory to allocate"
                                        }
                                    }
                                },
                                "requests": {
                                    "type": "object",
                                    "properties": {
                                        "cpu": {
                                            "type": "number",
                                            "default": 2,
                                            "description": "Number of cores to allocate"
                                        },
                                        "memory": {
                                            "type": "string",
                                            "default": "2Gi",
                                            "description": "Memory to allocate"
                                        }
                                    }
                                }
                            }
                        },
                        "probe": {
                            "type": "object",
                            "properties": {
                                "readinessProbe": {
                                    "type": "object",
                                    "properties": {
                                        "httpGet": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": "string",
                                                    "default": "/",
                                                    "description": "endpoint to query"
                                                },
                                                "port": {
                                                    "type": "number",
                                                    "default": 8090,
                                                    "description": "port to run http requests against"
                                                }
                                            }
                                        },
                                        "initialDelaySeconds":{
                                            "type": "number",
                                            "description": "how many seconds to wait before first request to probe the state",
                                            "default": 3
                                        },
                                        "periodSeconds":{
                                            "type": "number",
                                            "description": "ttl of request to probe the state",
                                            "default": 3
                                        }
                                    },
                                    "livenessProbe": {
                                        "type": "object",
                                        "properties": {
                                            "httpGet": {
                                                "type": "object",
                                                "properties": {
                                                    "path": {
                                                        "type": "string",
                                                        "default": "/",
                                                        "description": "endpoint to query"
                                                    },
                                                    "port": {
                                                        "type": "number",
                                                        "default": 8090,
                                                        "description": "port to run http requests against"
                                                    }
                                                }
                                            },
                                            "initialDelaySeconds":{
                                                "type": "number",
                                                "description": "how many seconds to wait before first request to probe the state",
                                                "default": 3
                                            },
                                            "periodSeconds":{
                                                "type": "number",
                                                "description": "ttl of request to probe the state",
                                                "default": 3
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "volumes": {
                            "type": "object",
                            "properties": {
                                "serviceConfig": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "default": "",
                                            "description": "volume name to mount"
                                        },
                                        "mountPath": {
                                            "type": "string",
                                            "default": "/config",
                                            "description": "mount folder location (name)"
                                        },
                                        "fileName": {
                                            "type": "string",
                                            "default": "config.yaml",
                                            "description": "configuration file name"
                                        }
                                    }
                                },
                                "extraVolumes": {
                                    "type": "array",
                                    "default": [],
                                    "description": "extra volumes that the end user can mount",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "configmap/volume name"
                                        },
                                        "mountPath": {
                                            "type": "string",
                                            "description": "folder name/path"
                                        },
                                        "subPath": {
                                            "type": "string",
                                            "description": "filename"
                                        }
                                    }
                                },
                                "extraSecretMounts": {
                                    "type": "array",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "volume name"
                                        },
                                        "mountPath": {
                                            "type": "string",
                                            "description": "folder name/path"
                                        },
                                        "secretName": {
                                            "type": "string",
                                            "description": "secret name"
                                        },
                                        "readOnly": {
                                            "type": "boolean",
                                            "default": true,
                                            "description": "can the pod change the secret"
                                        }
                                    }
                                }
                            }
                        },
                        "network": {
                            "type": "object",
                            "properties": {
                                "localListenerIp": {
                                    "type": "string",
                                    "default": "0.0.0.0",
                                    "description": "ip address the application should accept requests from"
                                },
                                "type": {
                                    "type": "string",
                                    "default": "None",
                                    "description": "Network type"
                                },
                                "ports": {
                                    "type": "array",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "port name"
                                        },
                                        "internalPort": {
                                            "type": "number",
                                            "description": "port that the container should listen on"
                                        },
                                        "externalPort": {
                                            "type": "number",
                                            "description": "port that the container should expose"
                                        },
                                        "protocol": {
                                            "enum": ["TCP", "UDP", "ICMP"],
                                            "default": "TCP",
                                            "description": "port protocol, that the application is using to get traffic",
                                            "examples": ["TCP", "UDP", "ICMP"]
                                        }
                                    }
                                },
                                "istio": {
                                    "type": "object",
                                    "properties": {
                                        "enable": {
                                            "type": "boolean",
                                            "default": false,
                                            "description": "should the deployment network be handled using istio"
                                        },
                                        "rules": {
                                            "type": "array",
                                            "properties": {
                                                "ingress": {
                                                    "type": "array",
                                                    "properties": {
                                                        "uriPrefix": {
                                                            "type": "string",
                                                            "description": "request address"
                                                        },
                                                        "host": {
                                                            "type": "string",
                                                            "description": "to which address we should listen and identify the traffic"
                                                        },
                                                        "destinationPort": {
                                                            "type": "number",
                                                            "description": "to which port should the traffic be transferred to"
                                                        }
                                                    }
                                                },
                                                "hostHeader": {
                                                    "type": "array",
                                                    "default": []
                                                }
                                            }
                                        }
                                    }
                                },
                                "services": {
                                    "type": "array", 
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "service name"
                                        },
                                        "serviceType": {
                                            "enum": ["LoadBalancer", "ClusterIP"],
                                            "description": "Service type",
                                            "examples": ["LoadBalancer", "ClusterIP"]
                                        },
                                        "selector": {
                                            "type": "object",
                                            "description": "which pods will be used for this service (by label)"
                                        },
                                        "ports": {
                                            "type": "array",
                                            "description": "service ports",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "port name"
                                                },
                                                "type": {
                                                    "enum": ["http", "grpc", "tcp"],
                                                    "description": "port type",
                                                    "examples": ["http", "grpc", "tcp"]
                                                },
                                                "internalPort": {
                                                    "type": "number",
                                                    "description": "port that the container should listen on"
                                                },
                                                "externalPort": {
                                                    "type": "number",
                                                    "description": "port that the container should expose"
                                                },
                                                "protocol": {
                                                    "enum": ["TCP", "UDP", "ICMP"],
                                                    "default": "TCP",
                                                    "description": "port protocol, that the application is using to get traffic",
                                                    "examples": ["TCP", "UDP", "ICMP"]
                                                },
                                                "loadBalancer": {
                                                    "type": "object",
                                                    "description": "LB configuration",
                                                    "properties": {
                                                        "simple": {
                                                            "type": "string",
                                                            "default": "LEAST_CONN",
                                                            "description": "routing mechanism"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }   
}